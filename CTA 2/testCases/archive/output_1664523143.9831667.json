{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_caf_search>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        global driver\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.add_argument(\"--window-size=1920,1080\")\n            chrome_options.add_argument(\"--disable-extensions\")\n            chrome_options.add_argument(\"--proxy-server='direct://'\")\n            chrome_options.add_argument(\"--proxy-bypass-list=*\")\n            chrome_options.add_argument(\"--start-maximized\")\n            chrome_options.add_argument('--headless')\n            chrome_options.add_argument('--disable-gpu')\n            chrome_options.add_argument('--disable-dev-shm-usage')\n            chrome_options.add_argument('--no-sandbox')\n            chrome_options.add_argument('--ignore-certificate-errors')\n    \n    \n            driver = webdriver.Chrome(ChromeDriverManager().install())#,options=chrome_options)\n            # ser = Service(ChromeDriverManager().install())\n            # driver = webdriver.Chrome(service = ser)#,options=chrome_options)\n    \n            driver = webdriver.Chrome(ChromeDriverManager().install(),options=chrome_options)\n            ser = Service(ChromeDriverManager().install())\n>           driver = webdriver.Chrome(service = ser,options=chrome_options)\nE           TypeError: __init__() got an unexpected keyword argument 'service'\n\nconftest.py:51: TypeError\n", "test_name": "test_caf_search", "rerun": "0"}}, "suite_name": "test_happycase1.py"}}}, "date": "September 30, 2022", "start_time": 1664523104.4525802, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}